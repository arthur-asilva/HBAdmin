CREATE TABLE IF NOT EXISTS "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL);
CREATE TABLE sqlite_sequence(name,seq);
CREATE TABLE IF NOT EXISTS "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "auth_user_groups" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "auth_user_user_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_user_groups_user_id_group_id_94350c0c_uniq" ON "auth_user_groups" ("user_id", "group_id");
CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id");
CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id");
CREATE UNIQUE INDEX "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" ON "auth_user_user_permissions" ("user_id", "permission_id");
CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id");
CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id");
CREATE TABLE IF NOT EXISTS "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "action_time" datetime NOT NULL);
CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE TABLE IF NOT EXISTS "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL);
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE TABLE IF NOT EXISTS "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL);
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE TABLE IF NOT EXISTS "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(150) NOT NULL UNIQUE);
CREATE TABLE IF NOT EXISTS "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "last_name" varchar(150) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "first_name" varchar(150) NOT NULL);
CREATE TABLE IF NOT EXISTS "clients_client" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(250) NOT NULL, "address" varchar(250) NOT NULL, "services" text NOT NULL CHECK ((JSON_VALID("services") OR "services" IS NULL)), "is_active" bool NOT NULL);
CREATE TABLE IF NOT EXISTS "clients_service" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(250) NOT NULL);
CREATE TABLE IF NOT EXISTS "clients_enrollment" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "is_active" bool NOT NULL, "enrollment_class_id" bigint NOT NULL REFERENCES "clients_classes" ("id") DEFERRABLE INITIALLY DEFERRED, "student_id" bigint NOT NULL REFERENCES "users_student" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE INDEX "clients_enrollment_enrollment_class_id_5e138fa4" ON "clients_enrollment" ("enrollment_class_id");
CREATE INDEX "clients_enrollment_student_id_8a84dfa7" ON "clients_enrollment" ("student_id");
CREATE TABLE IF NOT EXISTS "clients_classes" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "schedule" varchar(5) NOT NULL, "price" decimal NOT NULL, "service" varchar(250) NOT NULL, "duration" integer NULL, "is_active" bool NOT NULL, "client_id" bigint NOT NULL REFERENCES "clients_client" ("id") DEFERRABLE INITIALLY DEFERRED, "teacher_id" bigint NOT NULL REFERENCES "users_teacher" ("id") DEFERRABLE INITIALLY DEFERRED, "weekday" text NULL CHECK ((JSON_VALID("weekday") OR "weekday" IS NULL)));
CREATE INDEX "clients_classes_client_id_560be52f" ON "clients_classes" ("client_id");
CREATE INDEX "clients_classes_teacher_id_2c3a1395" ON "clients_classes" ("teacher_id");
CREATE TABLE IF NOT EXISTS "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL);
CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE TABLE IF NOT EXISTS "clients_schedule" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "date" date NOT NULL, "hour" time NOT NULL, "status" bool NOT NULL, "professional_id" bigint NULL REFERENCES "users_teacher" ("id") DEFERRABLE INITIALLY DEFERRED, "service_id" bigint NOT NULL REFERENCES "clients_service" ("id") DEFERRABLE INITIALLY DEFERRED, "student_id" bigint NOT NULL REFERENCES "users_student" ("id") DEFERRABLE INITIALLY DEFERRED, "created" datetime NULL);
CREATE INDEX "clients_schedule_professional_id_630bba1e" ON "clients_schedule" ("professional_id");
CREATE INDEX "clients_schedule_service_id_1a54086c" ON "clients_schedule" ("service_id");
CREATE INDEX "clients_schedule_student_id_132d57de" ON "clients_schedule" ("student_id");
CREATE TABLE IF NOT EXISTS "users_administrator" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(250) NOT NULL, "email" varchar(250) NOT NULL, "photo" text NOT NULL, "password" varchar(250) NOT NULL, "access_group" varchar(3) NOT NULL, "is_active" bool NOT NULL, "created_at" date NOT NULL);
CREATE TABLE IF NOT EXISTS "users_attendencelist" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "enrollments" text NOT NULL CHECK ((JSON_VALID("enrollments") OR "enrollments" IS NULL)), "attendence_class_id" bigint NULL REFERENCES "clients_classes" ("id") DEFERRABLE INITIALLY DEFERRED, "details" text NULL, "photo" text NULL, "likes" text NOT NULL CHECK ((JSON_VALID("likes") OR "likes" IS NULL)), "total_likes" integer NOT NULL, "date" datetime NOT NULL);
CREATE INDEX "users_attendencelist_attendence_class_id_bef0ff26" ON "users_attendencelist" ("attendence_class_id");
CREATE TABLE IF NOT EXISTS "users_student" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(250) NOT NULL, "email" varchar(250) NOT NULL, "photo" text NOT NULL, "password" varchar(250) NOT NULL, "access_group" varchar(3) NOT NULL, "is_active" bool NOT NULL, "height" decimal NULL, "mass" decimal NULL, "workout_tips" text NOT NULL CHECK ((JSON_VALID("workout_tips") OR "workout_tips" IS NULL)), "born_date" date NULL, "last_access" date NOT NULL, "townhouse_id" bigint NULL REFERENCES "clients_client" ("id") DEFERRABLE INITIALLY DEFERRED, "created_at" date NOT NULL);
CREATE INDEX "users_student_townhouse_id_6a583fb2" ON "users_student" ("townhouse_id");
CREATE TABLE IF NOT EXISTS "users_teacher" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(250) NOT NULL, "email" varchar(250) NOT NULL, "photo" text NOT NULL, "password" varchar(250) NOT NULL, "access_group" varchar(3) NOT NULL, "is_active" bool NOT NULL, "skills" text NOT NULL CHECK ((JSON_VALID("skills") OR "skills" IS NULL)), "description" text NULL, "availability" text NOT NULL CHECK ((JSON_VALID("availability") OR "availability" IS NULL)), "is_hired" bool NULL, "created_at" date NOT NULL);
CREATE TABLE IF NOT EXISTS "users_token" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "email" varchar(255) NOT NULL, "token" varchar(8) NOT NULL, "created_at" date NOT NULL);
